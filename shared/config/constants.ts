import { ListOfProjects, ProjectLabel, ProjectLevel } from '@/shared/types/types';
import { Metadata } from 'next';
import { ALL_PROJECTS, getAllProjects, getProjectsByLevel } from './projects';

/**
 * @constant
 * @type {Metadata}
 * @description –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è SEO –∏ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @property {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
 * @property {string} description - –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
 * @property {string[]} keywords - –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è SEO
 * @property {Object[]} authors - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞
 * @property {string} authors[].name - –ò–º—è –∞–≤—Ç–æ—Ä–∞
 * @property {string} authors[].url - URL –ø—Ä–æ—Ñ–∏–ª—è –∞–≤—Ç–æ—Ä–∞
 */
export const PROJECTS_METADATA: Metadata = {
  title: 'Next.js Starter Template',
  description: 'A Next.js starter template with a minimalistic design and a clean code structure.',
  keywords: ['Next.js', 'React'],
  authors: [{ name: 'Alim Nagoev', url: 'https://github.com/nagoev-alim' }],
};

/**
 * @constant
 * @type {ListOfProjects}
 * @description –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Ç–∏–ø—É
 *
 * –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥—É–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
 * - –õ–µ–≥–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã: shared/config/projects/easy.ts
 * - –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã: shared/config/projects/medium.ts
 * - –°–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã: shared/config/projects/hard.ts (–±—É–¥—É—â–∏–µ)
 *
 * –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
 * - –ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
 * - –õ–µ–≥–∫–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
 * - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ–∞–±—Ä–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
 * - –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
 * - –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
 * - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
 */
export const PROJECTS_LIST: ListOfProjects = ALL_PROJECTS as ListOfProjects;

// ===============================================
// üöÄ UTILITY FUNCTIONS (–£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏)
// ===============================================

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
 */
export const getProjects = getAllProjects;

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –ø–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
 */
export const getProjectsByDifficulty = getProjectsByLevel;

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ª–µ–≥–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
 */
export function getEasyProjectsFromConstants() {
  return getProjectsByLevel(ProjectLevel.easy);
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
 */
export function getMediumProjectsFromConstants() {
  return getProjectsByLevel(ProjectLevel.medium);
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
 */
export function getHardProjects() {
  return getProjectsByLevel(ProjectLevel.hard);
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—è–º
 */
export function getProjectCounts() {
  const easy = Object.keys(getEasyProjectsFromConstants()).length;
  const medium = Object.keys(getMediumProjectsFromConstants()).length;
  const hard = Object.keys(getHardProjects()).length;

  return {
    easy,
    medium,
    hard,
    total: easy + medium + hard,
  };
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
 */
export function projectExists(label: ProjectLabel): boolean {
  return label in PROJECTS_LIST;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ –ø–æ –º–µ—Ç–∫–µ
 */
export function getProjectInfo(label: ProjectLabel) {
  return PROJECTS_LIST[label] || null;
}

// ===============================================
// üìä PROJECT STATISTICS (–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤)
// ===============================================

/**
 * –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
 */
export function getProjectStatistics() {
  const counts = getProjectCounts();
  const allProjects = getAllProjects();

  // –ü–æ–¥—Å—á–µ—Ç –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–µ—Å–ª–∏ –µ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
  const categoryCounts: Record<string, number> = {};
  Object.values(allProjects).forEach(project => {
    if ('category' in project && project.category) {
      categoryCounts[project.category] = (categoryCounts[project.category] || 0) + 1;
    }
  });

  return {
    ...counts,
    byCategory: categoryCounts,
    lastUpdated: new Date().toISOString(),
  };
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —É—Ç–∏–ª–∏—Ç—ã –∏–∑ –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
export * from './projects';