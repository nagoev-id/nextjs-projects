'use client';

/**
 * # Переключатель темы (светлая/темная)
 *
 * ## Принцип работы:
 *
 * 1. **Инициализация**:
 *    - При загрузке приложение получает текущую тему из next-themes
 *    - Используется хук useTheme для доступа к текущей теме и функциям управления
 *    - Доступны значения theme (выбранная тема) и resolvedTheme (фактически примененная тема)
 *
 * 2. **Отображение текущей темы**:
 *    - В заголовке отображается название текущей темы с заглавной буквы
 *    - Если theme не определена, используется resolvedTheme в качестве запасного варианта
 *    - Текст преобразуется с помощью функции capitalizeFirstLetter для правильного отображения
 *
 * 3. **Переключение темы**:
 *    - Для переключения используется компонент ThemeToggle
 *    - Компонент позволяет выбрать между светлой, темной и системной темами
 *    - При выборе системной темы, приложение следует настройкам операционной системы
 *
 * 4. **Сохранение настроек**:
 *    - Выбранная тема автоматически сохраняется в localStorage
 *    - При следующем посещении сайта будет применена последняя выбранная тема
 *
 * 5. **Адаптивность**:
 *    - Интерфейс корректно отображается как в светлой, так и в темной теме
 *    - Стили компонентов автоматически адаптируются к выбранной теме
 */

import { useTheme } from 'next-themes';
import { ThemeToggle } from '@/components/layout';
import { Card } from '@/components/ui/card';
import { HELPERS } from '@/shared';

/**
 * Компонент страницы переключения темы
 * Отображает текущую тему и предоставляет интерфейс для её изменения
 *
 * @returns {JSX.Element} Компонент страницы переключения темы
 */
const DarkThemePage = () => {
  /**
   * Получение данных о текущей теме из next-themes
   * theme - выбранная пользователем тема
   * resolvedTheme - фактически примененная тема (учитывает системные настройки)
   */
  const { theme, resolvedTheme } = useTheme();

  /**
   * Определение текущей темы для отображения
   * Использует theme, если она определена, иначе использует resolvedTheme
   * Применяет функцию capitalizeFirstLetter для форматирования текста
   */
  const currentTheme = HELPERS.capitalizeFirstLetter(theme || resolvedTheme || 'system');

  return (
    <Card
      className="max-w-sm grid gap-3 place-items-center w-full mx-auto p-4 rounded"
      aria-label="Theme switcher card"
    >
      {/* Заголовок с текстом текущего режима темы */}
      <h2
        className="font-semibold text-center"
        aria-live="polite"
      >
        {currentTheme} Theme
      </h2>

      {/* Компонент для переключения между темами */}
      <ThemeToggle />
    </Card>
  );
};

export default DarkThemePage;